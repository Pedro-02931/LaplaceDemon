
# Esse script salva as informações  num arquivo para a IA usar

collect_and_save_hw_specs() {
    local cores total_mem_mb available_gov max_tdp tdp_uw

    cores=$(nproc --all 2>/dev/null || echo 4)
    total_mem_mb=$(( $(grep MemTotal /proc/meminfo | awk '{print $2}') / 1024 )) || 4096
    available_gov=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors 2>/dev/null || echo "ondemand userspace performance")

    # Tenta ler TDP do Intel RAPL (Constraint 0)
    tdp_uw=$(cat /sys/class/powercap/intel-rapl/intel-rapl:0/constraint_0_max_power_uw 2>/dev/null || \
             cat /sys/class/powercap/intel-rapl-core/intel-rapl-core:0/constraint_0_max_power_uw 2>/dev/null)

    if [[ -n "$tdp_uw" && "$tdp_uw" -gt 0 ]]; then
        max_tdp=$(( tdp_uw / 1000000 ))
    else
        max_tdp=15 # Default se falhar a leitura
        echo "WARN: Falha ao ler TDP Max via Intel RAPL, usando default ${max_tdp}W." >&2
    fi

    echo "Salvando especificações de HW em ${HW_SPECS_FILE}..."
    cat << EOF > "$HW_SPECS_FILE"
# Hardware Specifications (Collected Once)
HW_CORES_TOTAL=${cores}
HW_TOTAL_MEM_MB=${total_mem_mb}
HW_AVAILABLE_GOVERNORS="${available_gov}"
HW_MAX_TDP=${max_tdp}
EOF
    echo "Especificações salvas."
    chmod 644 "$HW_SPECS_FILE"
    chown root:root "$APPLY_LOGIC_FILE"
}
